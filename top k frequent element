
class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) 
    {
        vector<int>ans;
        map<int,int>mp;
        for(int i=0;i<nums.size();i++)
            mp[nums[i]]++;

        vector<pair<int,int>>v;
        
        for(auto it : mp )
            v.push_back(make_pair(it.second,it.first));

        sort(v.rbegin(),v.rend());

        for(int i=0;i<v.size() && k!=0 ;i++)
        {
            ans.push_back(v[i].second);
            k--;
        }       
        return ans; 
    }
};


// class Solution {
// public:
//     vector<int> topKFrequent(vector<int>& nums, int k) {
//         priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;
//         unordered_map<int,int>mp;
//         vector<int>ans;
//         for(int i=0; i<nums.size();i++){
//             mp[nums[i]]++;
//         }
//         for(auto i = mp.begin();i!=mp.end();i++){
//             pq.push({i->second,i->first});
//             if(pq.size() > k){
//                 pq.pop();
//             }
//         }
//         while(pq.size() > 0){
//             ans.push_back(pq.top().second);
//             pq.pop();
//         }
//         return ans;
//     }
// };
