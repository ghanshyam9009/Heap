class Twitter {
public:
    Twitter() {

    }
    
    void postTweet(int userId, int tweetId) {
        posts.push_back({userId, tweetId});
    }

    
    vector<int> getNewsFeed(int userId) {
        vector<int> result;
        int count = 10;
    
        for (int i = posts.size() - 1; i >= 0; i--) {
            
            if (count == 0) {
                break;
            }
            
            int followingId = posts[i].first;
            int tweetId = posts[i].second;
            
            if (followMap[userId].find(followingId) != followMap[userId].end() || followingId == userId) {
                result.push_back(tweetId);
                count--;
            }
        }
        return result;
    }

    
    void follow(int followerId, int followeeId) {
        followMap[followerId].insert(followeeId);
    }
    

    void unfollow(int followerId, int followeeId) {
        followMap[followerId].erase(followeeId);
    }

private:
    vector<pair<int, int>> posts;
    unordered_map<int, unordered_set<int>> followMap;
};


// followee -> hero id
// follower -> the man who follow hero
